#!/usr/bin/env ruby

begin
  require 'gli'
rescue LoadError
  require 'rubygems'
  require 'gli'
end

include GLI::App

require 'ap' #TODO: Remove me

program_desc 'Gather information about other gems from multiple sources.'

version GemGrepper::VERSION

desc 'Retrieve data about specified gems'
arg_name "'comma-delimited,list,of,gems'"
command :get do |c|
  c.desc 'Path to a Gemfile.lock or flat-text file of gems'
  c.flag [:f,:file]
  c.action do |global_options,options,args|

    # Your command logic here
    ap global_options
    ap options
    ap args

    # If you have any errors, just raise them
    # raise "that command made no sense"

    puts "get command ran"
  end
end

desc 'Output gem data in a specified format'
command :export do |c|
  c.flag :f,:format, :default_value => 'json', :desc => 'Format for exported file: json, csv, xml, spreadsheet'
  c.flag :o,:output, :default_value => 'gems_metadata', :desc => 'File to export to'
  c.action do |global_options,options,args|

    # Your command logic here
    ap global_options
    ap options
    ap args

    # If you have any errors, just raise them
    # raise "that command made no sense"

    puts "export command ran"
  end
end

pre do |global,command,options,args|
  # Pre logic here
  # Return true to proceed; false to abort and not call the
  # chosen command
  # Use skips_pre before a command to skip this block
  # on that command only
  true
end

post do |global,command,options,args|
  # Post logic here
  # Use skips_post before a command to skip this
  # block on that command only
end

on_error do |exception|
  # Error logic here
  # return false to skip default error handling
  true
end

exit run(ARGV)
